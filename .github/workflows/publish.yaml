name: Publish

on:
  workflow_dispatch:
    inputs:
      new-version:
        required: true
        description: New plugin version e.g. 1.0
env:
  XCODE_VERSION: '15.0.1'
  JAVA_VERSION: '17'

permissions:
  contents: write
  packages: write

jobs:
  publish:
    runs-on: macOS-13
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Setup XCode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.XCODE_VERSION }}
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: |
            8
            ${{ env.JAVA_VERSION }}
          distribution: "zulu"
      - name: Cache build tooling
        uses: actions/cache@v4
        with:
          path: |
            ~/.konan
          key: ${{ runner.os }}-v4-${{ hashFiles('*.gradle.kts') }}
      - name: Update library version name
        uses: MathieuSoysal/replace-string-in-file@v1.1.0
        with:
          file: gradle/libs.versions.toml
          old-string: 'library = ".*"'
          new-string: 'library = "{{ github.event.inputs.new-version }}"'
      - name: Update version name in sample app
        uses: MathieuSoysal/replace-string-in-file@v1.1.0
        with:
          file: samples/SampleKMPApplication/gradle/libs.versions.toml
          old-string: 'eventPlugin = ".*"'
          new-string: 'eventPlugin = "{{ github.event.inputs.new-version }}"'
      - name: Git commit, tag
        run: |
          git add gradle/libs.versions.toml
          git commit -m "[CI] Version bump to ${{ github.event.inputs.new-version }}"
          git tag ${{ github.event.inputs.new-version }}
      - name: Set Github credentials
        run: |
          cat << EOF >> gradle.properties
          githubUsername=$GITHUB_USERNAME
          githubPassword=$GITHUB_TOKEN
          EOF
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_USERNAME: ${{ github.actor }}
      - name: Build Plugin & Runtime
        run: |
          ./gradlew -version --no-daemon
          ./gradlew check publishToMavenLocal --no-daemon --stacktrace
        env:
          GRADLE_OPTS: -Dkotlin.incremental=false -Dorg.gradle.jvmargs="-Xmx3g -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8 -XX:MaxMetaspaceSize=512m"
      - name: Build KMP Sample app (shared, Android, JVM, JS)
        working-directory: ./samples/SampleKMPApplication
        run: ./gradlew check --no-daemon --stacktrace
        env:
          GRADLE_OPTS: -Dkotlin.incremental=false -Dorg.gradle.jvmargs="-Xmx3g -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8 -XX:MaxMetaspaceSize=512m"
      - name: Build iOS Sample app
        working-directory: ./samples/SampleKMPApplication
        run: xcodebuild build -project iosApp/iosApp.xcodeproj -configuration Debug -scheme iosApp -sdk iphoneos -destination name='iPhone 15 Pro' -verbose
      - name: Publish Plugin & Runtime
        run: |
          ./gradlew publish --no-daemon --stacktrace
        env:
          GRADLE_OPTS: -Dkotlin.incremental=false -Dorg.gradle.jvmargs="-Xmx3g -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8 -XX:MaxMetaspaceSize=512m"
      - name: Git push
        run: git push
